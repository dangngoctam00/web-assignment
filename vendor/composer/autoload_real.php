<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInitef5e20f62381bc4416635c15b166e45e
=======
class ComposerAutoloaderInitd45109cae1cdeea2fe1bfba10b30da73
>>>>>>> 8f5466f86e1e3b0b4b73a9c811c7186fa5f7dc4d
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    /**
     * @return \Composer\Autoload\ClassLoader
     */
    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

        require __DIR__ . '/platform_check.php';

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInitef5e20f62381bc4416635c15b166e45e', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader(\dirname(\dirname(__FILE__)));
        spl_autoload_unregister(array('ComposerAutoloaderInitef5e20f62381bc4416635c15b166e45e', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInitd45109cae1cdeea2fe1bfba10b30da73', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader(\dirname(\dirname(__FILE__)));
        spl_autoload_unregister(array('ComposerAutoloaderInitd45109cae1cdeea2fe1bfba10b30da73', 'loadClassLoader'));
>>>>>>> 8f5466f86e1e3b0b4b73a9c811c7186fa5f7dc4d

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if ($useStaticLoader) {
            require __DIR__ . '/autoload_static.php';

<<<<<<< HEAD
            call_user_func(\Composer\Autoload\ComposerStaticInitef5e20f62381bc4416635c15b166e45e::getInitializer($loader));
=======
            call_user_func(\Composer\Autoload\ComposerStaticInitd45109cae1cdeea2fe1bfba10b30da73::getInitializer($loader));
>>>>>>> 8f5466f86e1e3b0b4b73a9c811c7186fa5f7dc4d
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);

        return $loader;
    }
}
